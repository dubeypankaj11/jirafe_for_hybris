{
    "cookies": "@{
        parsedCookies = [:]
        for (cookie in cookies) {
            parsedCookies[cookie.name] = cookie.value.toString()
        }
        if (!parsedCookies) return null
        return parsedCookies
    }",
    "visit_id": "@{return parsedCookies['jirafe_vid']}",
    "pageview_id": "@{return parsedCookies['jirafe_pvid']}",
    "id": "pk@{return pk.toString()}",
    "order_number": "code",
    "customer_id": "user.uid@{return uid.toString()}",
    "create_date": "@{
        createDate = dateFormat.format(model?.creationtime ?: new Date())
        return createDate
    }",
    "change_date": "@{
        return model?.modifiedtime ? dateFormat.format(model?.modifiedtime) : createDate
    }",
    "status": "status@{
        cartStatus = [
            CREATED: 'pending',
            ON_VALIDATION: 'pending',
            COMPLETED: 'complete',
            CANCELLED: 'cancelled',
            CANCELLING: 'pending',
            CHECKED_VALID: 'pending',
            CHECKED_INVALID: 'failed',
            PAYMENT_AUTHORIZED: 'authorized',
            PAYMENT_NOT_AUTHORIZED: 'failed',
            PAYMENT_AMOUNT_RESERVED: 'pending',
            PAYMENT_AMOUNT_NOT_RESERVED: 'failed',
            PAYMENT_CAPTURED: 'pending',
            PAYMENT_NOT_CAPTURED: 'failed',
            FRAUD_CHECKED: 'pending',
            ORDER_PLACED_NOTIFICATION_SENT: 'pending',
            ORDER_SPLIT: 'pending',
            PROCESSING_ERROR: 'failed',
            B2B_PROCESSING_ERROR: 'failed',
        ][status?.code] ?: 'other'
        return cartStatus
    }",
    "subtotal": "subtotal",
    "total": "totalPrice",
    "total_tax": "totalTax",
    "total_shipping": "deliveryCost",
    "total_payment_cost": "paymentCost",
    "total_discounts": "totalDiscounts",
    "currency": "currency.isocode",
    "items": [
        {
            "_path": "entries"
        },
        {
            "id": "pk@{return pk.toString()}",
            "create_date": "creationtime@{return dateFormat.format(creationtime)}",
            "change_date": "modifiedtime@{return dateFormat.format(modifiedtime)}",
            "order_item_number": "entryNumber@{entryNumber.toString()}",
            "status": "@{return cartStatus}",
            "quantity": "quantity",
            "amount": "totalPrice",
            "discount_amount": "discountValues@{
                return de.hybris.platform.util.DiscountValue.sumAppliedValues(discountValues)
            }",
            "product": "product@{
                return jirafeModelToMapConverter.toMap(product, 'Product', null)
            }"
        }
    ]
}
