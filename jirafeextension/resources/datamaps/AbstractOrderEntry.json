{
    "__init__": "@{
        import de.hybris.platform.core.model.order.AbstractOrderEntryModel
        abstractOrderEntryItems = {
            entries ->
            def ret = []
            changedItem = [:]
            for (def entry in entries) {
                ret.add(jirafeModelToMapConverter.toMap(entry, 'AbstractOrderEntry', null))
            }
            return ret.size > 0 ? ret : null
        }
        abstractOrderEntryPreviousItems = {
            model ->
            def ret = []
            def done = new HashSet()
            def changedItems = jirafeModelToMapConverter.changedItems(model)
            for (def item in model.entries) {
                changedItem = changedItems[item.product.pk] ?: [:]
                done.add(item.product.pk)
                if (changedItem && !changedItem.modifiedtime) continue
                ret.add(jirafeModelToMapConverter.toMap(item, 'AbstractOrderEntry', null))
            }
            for (def key in changedItems.keySet()) {
                if (key in done) continue
                changedItem = changedItems[key]
                ret.add(jirafeModelToMapConverter.toMap(new AbstractOrderEntryModel(), 'AbstractOrderEntry', null))
            }
            return ret.size > 0 ? ret : null
        }
        return null
    }",
    "id": "pk@{
        return (changedItem.pk ?: pk).toString()
    }",
    "create_date": "@{
        aoeCreateTime = changedItem.creationtime ?: model?.creationtime ?: model?.modifiedtime ?: new Date()
        return dateFormat.format(aoeCreateTime)
    }",
    "change_date": "modifiedtime@{
        return dateFormat.format(changedItem.modifiedtime ?: modifiedtime ?: aoeCreateTime)
    }",
    "cart_item_number": "@{
        import de.hybris.platform.core.model.order.OrderModel
        if (model.order instanceof OrderModel) return null
        return changedItem.entrynumber ?: model.entryNumber.toString()
    }",
    "order_item_number": "@{
        import de.hybris.platform.core.model.order.CartModel
        if (model.order instanceof CartModel) return null
        return changedItem.entrynumber ?: model.entryNumber.toString()
    }",
    "quantity": "quantity@{
        return changedItem.quantity ?: quantity
    }",
    "status": "quantity@{
        return (changedItem.quantity ?: quantity) > 0 ? 'accepted' : 'cancelled'
    }",
    "price": "totalPrice@{
        return changedItem.totalprice ?: totalPrice
    }",
    "discount_price": "discountValues@{
        import de.hybris.platform.util.DiscountValue
        return DiscountValue.sumAppliedValues(
            changedItem.discountvalues ?: discountValues
        )
    }",
    "product": "product@{
        return jirafeModelToMapConverter.toMap(
            changedItem.product ?: product, 'Product', null
        )
    }"
}
