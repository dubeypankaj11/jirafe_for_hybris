{
    "__sites__": "@{return '*'}",
    "cookies": "@{
        parsedCookies = [:]
        for (def cookie in cookies) {
            parsedCookies[cookie.name] = cookie.value.toString()
        }
        if (!parsedCookies) return null
        return parsedCookies
    }",
    "create_date": "@{
        createDate = dateFormat.format(model?.creationtime ?: model?.modifiedtime ?: new Date())
        return createDate
    }",
    "change_date": "@{
        return model?.modifiedtime ? dateFormat.format(model?.modifiedtime) : createDate
    }",
    "id": "uid",
    "email" : "@{
        if (model.hasProperty('contactEmail')) {
            contactEmail = model.contactEmail
            if (contactEmail != 'demo@example.com')
                return contactEmail
        }
        for (def address in model.addresses) {
            if (address.email) return address.email
        }
        return null
    }",
    "name": "name",
    "first_name": "name@{return name?.replaceFirst(' [^ ]+$', '')}",
    "last_name": "name@{return name?.replaceFirst('^.* ', '')}",
    "company": "@{
        return model.hasProperty('defaultB2BUnit') ?
            model.defaultB2BUnit?.name : null
    }",
    "active_flag": "loginDisabled@{return ! loginDisabled}",
    "segments": "@{
        // anonymous user doesn't have useful segment info
        if (model.uid == 'anonymous') return null;
        if (!model.hasProperty('segmentResults')) return null
        def segmentResults = model.segmentResults
        def uids = new HashSet()
        segmentResults?.each{
            if (it.segment.catalogVersion.active) uids.add(it.segment.uid)
        }
        return uids ?: null
    }"
}
